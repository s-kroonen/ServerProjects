@rendermode InteractiveServer
@inject BeerTap.Services.UserService UserService

<div style="margin-top: 1rem;">
	<button @onclick="ToggleDebugPanel"
	style="width: 100%; background-color: #444; color: white; border: none; padding: 0.5rem 1rem; border-radius: 6px; cursor: pointer;">
		@(showDebugPanel ? "Hide Debug" : "Show Debug")
	</button>

	@if (showDebugPanel)
	{
		<div style="margin-top: 0.5rem; background: #222; color: white; padding: 0.75rem; font-size: small; border-radius: 8px;">
			<div><strong>Debug Panel</strong></div>
			<div>session ID: @_sessionUserId</div>
			<div>ID: @UserService._user?.ID</div>
			<div>User ID: @UserService._user?.UserId</div>
			<div>Score: @UserService._user?.Score</div>
		</div>
	}
</div>

@code {
	private bool showDebugPanel;

	private async void ToggleDebugPanel()
	{
		showDebugPanel = !showDebugPanel;
		if (showDebugPanel)
		{
			var result = await UserService._sessionStorage.GetAsync<Guid>("userId");
			if (result.Success)
			{
				await UserService.TryRestoreSessionAsync();
				_sessionUserId = result.Value;
			}
		}
	}
	private Guid _sessionUserId = Guid.Empty;

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			var result = await UserService._sessionStorage.GetAsync<Guid>("userId");
			if (result.Success)
			{
				await UserService.TryRestoreSessionAsync();
				_sessionUserId = result.Value;
			}
		}
	}
}
